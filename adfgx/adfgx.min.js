"use strict";const adfgx=(()=>{const BASE_POLYBIUS="ADFGX";const EXTENDED_POLYBIUS="ADFGVX";const DEFAULT_25_ALPHABET="ABCDEFGHIKLMNOPQRSTUVWXYZ";const DEFAULT_36_ALPHABET="ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";const PAD_CHAR='*';const fractionate=(plaintext,alphabet,polybius_square)=>{let retval="";for(let i=0;i<plaintext.length;i++){const n=alphabet.indexOf(plaintext[i]);if(n!==-1){const first=Math.floor(n/polybius_square.length);const second=Math.floor(n%polybius_square.length);const fractionated=`${polybius_square[first]}${polybius_square[second]}`;retval+=fractionated;}}return retval;};const column_transpose=(key,fractionated)=>{let retval=[];for(let i=0;i<key.length;i++)retval[i]="";for(let i=0;i<fractionated.length;i++){retval[i%key.length]+=fractionated[i];}return retval;};const alpha_transpose=(key,column_transposed)=>{let retval="";const ordered_key=key.slice().sort();for(let i=0;i<ordered_key.length;i++){retval+=column_transposed[key.indexOf(ordered_key[i])];}return retval;};const get_column_lengths=(key,full_width,missing)=>{let retval=[];const ordered_key=key.slice().sort();for(let i=0;i<key.length;i++){const j=key.indexOf(ordered_key[i]);if(j>=key.length-missing){retval[i]=full_width-1;}else{retval[i]=full_width;}}return retval;};const reverse_alpha_transpose=(key,ciphertext)=>{let missing=key.length-(ciphertext.length%key.length);if(missing===key.length)missing=0;const full_width=(ciphertext.length+missing)/key.length;const col_lengths=get_column_lengths(key,full_width,missing);let retval=[];for(let i=0;i<col_lengths.length;i++){let length=0;for(let j=0;j<i;j++){length+=col_lengths[j];}const slice=ciphertext.slice(length,length+col_lengths[i]);if(col_lengths[i]<full_width){retval[i]=slice+PAD_CHAR;}else{retval[i]=slice;}}return retval.toString().replaceAll(',','');};const reverse_column_transpose=(key,ciphertext)=>{const ordered_key=key.slice().sort();let retval="";const width=ciphertext.length/key.length;for(let y=0;y<width;y++){for(let x=0;x<key.length;x++){retval+=ciphertext[ordered_key.indexOf(key[x])*width+y];}}return retval.replaceAll(PAD_CHAR,'');};const reverse_fractionate=(ciphertext,alphabet,polybius_square)=>{let retval="";for(let i=0;i<ciphertext.length;i+=2){const first=polybius_square.indexOf(ciphertext[i]);const second=polybius_square.indexOf(ciphertext[i+1]);retval+=alphabet[first*polybius_square.length+second];}return retval;};const check_for_duplicate_chars=s=>{let retval=[];for(let i=0;i<s.length;i++){for(let j=0;j<s.length;j++){if(s[j]===s[i]&&i!==j){if(retval.indexOf(s[j])===-1){retval[retval.length]=s[j];}}}}return retval;};const remove_duplicate=s=>{const duplicate=check_for_duplicate_chars(s);for(let i=0;i<duplicate.length;i++){const j=s.indexOf(duplicate[i]);s=s.replaceAll(duplicate[i],"");s=s.slice(0,j)+duplicate[i]+s.slice(j);}return s;};const choose_polybius_square=alphabet=>{let retval="";if(alphabet.length===36){retval=EXTENDED_POLYBIUS;}else{retval=BASE_POLYBIUS;}return retval;};const pad_alphabet=(alphabet,default_alphabet)=>{let missing_chars=[];for(let i=0;i<default_alphabet.length;i++){if(alphabet.indexOf(default_alphabet[i])===-1){missing_chars[missing_chars.length]=default_alphabet[i];}}for(let i=0;i<missing_chars.length;i++){alphabet+=missing_chars[i];}return alphabet;};const format_inputs=(key,text,alphabet)=>{text=text.toUpperCase().trim();key=remove_duplicate(key.toUpperCase().trim()).split('');alphabet=only_alphabet_char(remove_duplicate(alphabet.toUpperCase().trim()));if(alphabet.length>DEFAULT_25_ALPHABET.length&&alphabet.length<DEFAULT_36_ALPHABET.length){alphabet=pad_alphabet(alphabet,DEFAULT_36_ALPHABET);}else if(alphabet.length<DEFAULT_25_ALPHABET.length){alphabet=alphabet.replaceAll('J','I');alphabet=pad_alphabet(alphabet,DEFAULT_25_ALPHABET);}if(alphabet.length===DEFAULT_25_ALPHABET.length){text=text.replaceAll('J','I');}const polybius_square=choose_polybius_square(alphabet);return{key:key,text:text,alphabet:alphabet,polybius_square:polybius_square};};const only_alphabet_char=s=>{let alphabet=DEFAULT_25_ALPHABET;if(s.length>DEFAULT_25_ALPHABET.length)alphabet=DEFAULT_36_ALPHABET;let retval="";for(let i=0;i<s.length;i++){if(alphabet.indexOf(s[i])!==-1){retval+=s[i];}}return retval;};const rng=(min,max)=>{const seed=crypto.getRandomValues(new Uint32Array(1))[0];const rand=seed/2**32;return Math.floor(rand*(max-min))+min;};return{encrypt(key,plaintext,alphabet=this.generate_alphabet(true)){const inputs=format_inputs(key,plaintext,alphabet);const ciphertext=alpha_transpose(inputs["key"],column_transpose(inputs["key"],fractionate(inputs["text"],inputs["alphabet"],inputs["polybius_square"])));return{ciphertext:ciphertext,alphabet:inputs["alphabet"]};},decrypt(key,ciphertext,alphabet){const inputs=format_inputs(key,ciphertext,alphabet);const plaintext=reverse_fractionate(reverse_column_transpose(inputs["key"],reverse_alpha_transpose(inputs["key"],inputs["text"])),inputs["alphabet"],inputs["polybius_square"]);return plaintext;},generate_alphabet(extended=false){let alphabet=DEFAULT_25_ALPHABET;if(extended)alphabet=DEFAULT_36_ALPHABET;const length=alphabet.length;let retval="";for(let i=0;i<length;i++){const j=rng(0,alphabet.length);retval+=alphabet[j];alphabet=alphabet.slice(0,j)+alphabet.slice(j+1);}return retval;}}})();