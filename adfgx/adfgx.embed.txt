<script defer src="data:text/javascript;base64,InVzZSBzdHJpY3QiO2NvbnN0IGFkZmd4PSgoKT0+e2NvbnN0IEJBU0VfUE9MWUJJVVM9IkFERkdYIjtjb25zdCBFWFRFTkRFRF9QT0xZQklVUz0iQURGR1ZYIjtjb25zdCBERUZBVUxUXzI1X0FMUEhBQkVUPSJBQkNERUZHSElLTE1OT1BRUlNUVVZXWFlaIjtjb25zdCBERUZBVUxUXzM2X0FMUEhBQkVUPSJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWjAxMjM0NTY3ODkiO2NvbnN0IFBBRF9DSEFSPScqJztjb25zdCBmcmFjdGlvbmF0ZT0ocGxhaW50ZXh0LGFscGhhYmV0LHBvbHliaXVzX3NxdWFyZSk9PntsZXQgcmV0dmFsPSIiO2ZvcihsZXQgaT0wO2k8cGxhaW50ZXh0Lmxlbmd0aDtpKyspe2NvbnN0IG49YWxwaGFiZXQuaW5kZXhPZihwbGFpbnRleHRbaV0pO2lmKG4hPT0tMSl7Y29uc3QgZmlyc3Q9TWF0aC5mbG9vcihuL3BvbHliaXVzX3NxdWFyZS5sZW5ndGgpO2NvbnN0IHNlY29uZD1NYXRoLmZsb29yKG4lcG9seWJpdXNfc3F1YXJlLmxlbmd0aCk7Y29uc3QgZnJhY3Rpb25hdGVkPWAke3BvbHliaXVzX3NxdWFyZVtmaXJzdF19JHtwb2x5Yml1c19zcXVhcmVbc2Vjb25kXX1gO3JldHZhbCs9ZnJhY3Rpb25hdGVkO319cmV0dXJuIHJldHZhbDt9O2NvbnN0IGNvbHVtbl90cmFuc3Bvc2U9KGtleSxmcmFjdGlvbmF0ZWQpPT57bGV0IHJldHZhbD1bXTtmb3IobGV0IGk9MDtpPGtleS5sZW5ndGg7aSsrKXJldHZhbFtpXT0iIjtmb3IobGV0IGk9MDtpPGZyYWN0aW9uYXRlZC5sZW5ndGg7aSsrKXtyZXR2YWxbaSVrZXkubGVuZ3RoXSs9ZnJhY3Rpb25hdGVkW2ldO31yZXR1cm4gcmV0dmFsO307Y29uc3QgYWxwaGFfdHJhbnNwb3NlPShrZXksY29sdW1uX3RyYW5zcG9zZWQpPT57bGV0IHJldHZhbD0iIjtjb25zdCBvcmRlcmVkX2tleT1rZXkuc2xpY2UoKS5zb3J0KCk7Zm9yKGxldCBpPTA7aTxvcmRlcmVkX2tleS5sZW5ndGg7aSsrKXtyZXR2YWwrPWNvbHVtbl90cmFuc3Bvc2VkW2tleS5pbmRleE9mKG9yZGVyZWRfa2V5W2ldKV07fXJldHVybiByZXR2YWw7fTtjb25zdCBnZXRfY29sdW1uX2xlbmd0aHM9KGtleSxmdWxsX3dpZHRoLG1pc3NpbmcpPT57bGV0IHJldHZhbD1bXTtjb25zdCBvcmRlcmVkX2tleT1rZXkuc2xpY2UoKS5zb3J0KCk7Zm9yKGxldCBpPTA7aTxrZXkubGVuZ3RoO2krKyl7Y29uc3Qgaj1rZXkuaW5kZXhPZihvcmRlcmVkX2tleVtpXSk7aWYoaj49a2V5Lmxlbmd0aC1taXNzaW5nKXtyZXR2YWxbaV09ZnVsbF93aWR0aC0xO31lbHNle3JldHZhbFtpXT1mdWxsX3dpZHRoO319cmV0dXJuIHJldHZhbDt9O2NvbnN0IHJldmVyc2VfYWxwaGFfdHJhbnNwb3NlPShrZXksY2lwaGVydGV4dCk9PntsZXQgbWlzc2luZz1rZXkubGVuZ3RoLShjaXBoZXJ0ZXh0Lmxlbmd0aCVrZXkubGVuZ3RoKTtpZihtaXNzaW5nPT09a2V5Lmxlbmd0aCltaXNzaW5nPTA7Y29uc3QgZnVsbF93aWR0aD0oY2lwaGVydGV4dC5sZW5ndGgrbWlzc2luZykva2V5Lmxlbmd0aDtjb25zdCBjb2xfbGVuZ3Rocz1nZXRfY29sdW1uX2xlbmd0aHMoa2V5LGZ1bGxfd2lkdGgsbWlzc2luZyk7bGV0IHJldHZhbD1bXTtmb3IobGV0IGk9MDtpPGNvbF9sZW5ndGhzLmxlbmd0aDtpKyspe2xldCBsZW5ndGg9MDtmb3IobGV0IGo9MDtqPGk7aisrKXtsZW5ndGgrPWNvbF9sZW5ndGhzW2pdO31jb25zdCBzbGljZT1jaXBoZXJ0ZXh0LnNsaWNlKGxlbmd0aCxsZW5ndGgrY29sX2xlbmd0aHNbaV0pO2lmKGNvbF9sZW5ndGhzW2ldPGZ1bGxfd2lkdGgpe3JldHZhbFtpXT1zbGljZStQQURfQ0hBUjt9ZWxzZXtyZXR2YWxbaV09c2xpY2U7fX1yZXR1cm4gcmV0dmFsLnRvU3RyaW5nKCkucmVwbGFjZUFsbCgnLCcsJycpO307Y29uc3QgcmV2ZXJzZV9jb2x1bW5fdHJhbnNwb3NlPShrZXksY2lwaGVydGV4dCk9Pntjb25zdCBvcmRlcmVkX2tleT1rZXkuc2xpY2UoKS5zb3J0KCk7bGV0IHJldHZhbD0iIjtjb25zdCB3aWR0aD1jaXBoZXJ0ZXh0Lmxlbmd0aC9rZXkubGVuZ3RoO2ZvcihsZXQgeT0wO3k8d2lkdGg7eSsrKXtmb3IobGV0IHg9MDt4PGtleS5sZW5ndGg7eCsrKXtyZXR2YWwrPWNpcGhlcnRleHRbb3JkZXJlZF9rZXkuaW5kZXhPZihrZXlbeF0pKndpZHRoK3ldO319cmV0dXJuIHJldHZhbC5yZXBsYWNlQWxsKFBBRF9DSEFSLCcnKTt9O2NvbnN0IHJldmVyc2VfZnJhY3Rpb25hdGU9KGNpcGhlcnRleHQsYWxwaGFiZXQscG9seWJpdXNfc3F1YXJlKT0+e2xldCByZXR2YWw9IiI7Zm9yKGxldCBpPTA7aTxjaXBoZXJ0ZXh0Lmxlbmd0aDtpKz0yKXtjb25zdCBmaXJzdD1wb2x5Yml1c19zcXVhcmUuaW5kZXhPZihjaXBoZXJ0ZXh0W2ldKTtjb25zdCBzZWNvbmQ9cG9seWJpdXNfc3F1YXJlLmluZGV4T2YoY2lwaGVydGV4dFtpKzFdKTtyZXR2YWwrPWFscGhhYmV0W2ZpcnN0KnBvbHliaXVzX3NxdWFyZS5sZW5ndGgrc2Vjb25kXTt9cmV0dXJuIHJldHZhbDt9O2NvbnN0IGNoZWNrX2Zvcl9kdXBsaWNhdGVfY2hhcnM9cz0+e2xldCByZXR2YWw9W107Zm9yKGxldCBpPTA7aTxzLmxlbmd0aDtpKyspe2ZvcihsZXQgaj0wO2o8cy5sZW5ndGg7aisrKXtpZihzW2pdPT09c1tpXSYmaSE9PWope2lmKHJldHZhbC5pbmRleE9mKHNbal0pPT09LTEpe3JldHZhbFtyZXR2YWwubGVuZ3RoXT1zW2pdO319fX1yZXR1cm4gcmV0dmFsO307Y29uc3QgcmVtb3ZlX2R1cGxpY2F0ZT1zPT57Y29uc3QgZHVwbGljYXRlPWNoZWNrX2Zvcl9kdXBsaWNhdGVfY2hhcnMocyk7Zm9yKGxldCBpPTA7aTxkdXBsaWNhdGUubGVuZ3RoO2krKyl7Y29uc3Qgaj1zLmluZGV4T2YoZHVwbGljYXRlW2ldKTtzPXMucmVwbGFjZUFsbChkdXBsaWNhdGVbaV0sIiIpO3M9cy5zbGljZSgwLGopK2R1cGxpY2F0ZVtpXStzLnNsaWNlKGopO31yZXR1cm4gczt9O2NvbnN0IGNob29zZV9wb2x5Yml1c19zcXVhcmU9YWxwaGFiZXQ9PntsZXQgcmV0dmFsPSIiO2lmKGFscGhhYmV0Lmxlbmd0aD09PTM2KXtyZXR2YWw9RVhURU5ERURfUE9MWUJJVVM7fWVsc2V7cmV0dmFsPUJBU0VfUE9MWUJJVVM7fXJldHVybiByZXR2YWw7fTtjb25zdCBwYWRfYWxwaGFiZXQ9KGFscGhhYmV0LGRlZmF1bHRfYWxwaGFiZXQpPT57bGV0IG1pc3NpbmdfY2hhcnM9W107Zm9yKGxldCBpPTA7aTxkZWZhdWx0X2FscGhhYmV0Lmxlbmd0aDtpKyspe2lmKGFscGhhYmV0LmluZGV4T2YoZGVmYXVsdF9hbHBoYWJldFtpXSk9PT0tMSl7bWlzc2luZ19jaGFyc1ttaXNzaW5nX2NoYXJzLmxlbmd0aF09ZGVmYXVsdF9hbHBoYWJldFtpXTt9fWZvcihsZXQgaT0wO2k8bWlzc2luZ19jaGFycy5sZW5ndGg7aSsrKXthbHBoYWJldCs9bWlzc2luZ19jaGFyc1tpXTt9cmV0dXJuIGFscGhhYmV0O307Y29uc3QgZm9ybWF0X2lucHV0cz0oa2V5LHRleHQsYWxwaGFiZXQpPT57dGV4dD10ZXh0LnRvVXBwZXJDYXNlKCkudHJpbSgpO2tleT1yZW1vdmVfZHVwbGljYXRlKGtleS50b1VwcGVyQ2FzZSgpLnRyaW0oKSkuc3BsaXQoJycpO2FscGhhYmV0PW9ubHlfYWxwaGFiZXRfY2hhcihyZW1vdmVfZHVwbGljYXRlKGFscGhhYmV0LnRvVXBwZXJDYXNlKCkudHJpbSgpKSk7aWYoYWxwaGFiZXQubGVuZ3RoPkRFRkFVTFRfMjVfQUxQSEFCRVQubGVuZ3RoJiZhbHBoYWJldC5sZW5ndGg8REVGQVVMVF8zNl9BTFBIQUJFVC5sZW5ndGgpe2FscGhhYmV0PXBhZF9hbHBoYWJldChhbHBoYWJldCxERUZBVUxUXzM2X0FMUEhBQkVUKTt9ZWxzZSBpZihhbHBoYWJldC5sZW5ndGg8REVGQVVMVF8yNV9BTFBIQUJFVC5sZW5ndGgpe2FscGhhYmV0PWFscGhhYmV0LnJlcGxhY2VBbGwoJ0onLCdJJyk7YWxwaGFiZXQ9cGFkX2FscGhhYmV0KGFscGhhYmV0LERFRkFVTFRfMjVfQUxQSEFCRVQpO31pZihhbHBoYWJldC5sZW5ndGg9PT1ERUZBVUxUXzI1X0FMUEhBQkVULmxlbmd0aCl7dGV4dD10ZXh0LnJlcGxhY2VBbGwoJ0onLCdJJyk7fWNvbnN0IHBvbHliaXVzX3NxdWFyZT1jaG9vc2VfcG9seWJpdXNfc3F1YXJlKGFscGhhYmV0KTtyZXR1cm57a2V5OmtleSx0ZXh0OnRleHQsYWxwaGFiZXQ6YWxwaGFiZXQscG9seWJpdXNfc3F1YXJlOnBvbHliaXVzX3NxdWFyZX07fTtjb25zdCBvbmx5X2FscGhhYmV0X2NoYXI9cz0+e2xldCBhbHBoYWJldD1ERUZBVUxUXzI1X0FMUEhBQkVUO2lmKHMubGVuZ3RoPkRFRkFVTFRfMjVfQUxQSEFCRVQubGVuZ3RoKWFscGhhYmV0PURFRkFVTFRfMzZfQUxQSEFCRVQ7bGV0IHJldHZhbD0iIjtmb3IobGV0IGk9MDtpPHMubGVuZ3RoO2krKyl7aWYoYWxwaGFiZXQuaW5kZXhPZihzW2ldKSE9PS0xKXtyZXR2YWwrPXNbaV07fX1yZXR1cm4gcmV0dmFsO307Y29uc3Qgcm5nPShtaW4sbWF4KT0+e2NvbnN0IHNlZWQ9Y3J5cHRvLmdldFJhbmRvbVZhbHVlcyhuZXcgVWludDMyQXJyYXkoMSkpWzBdO2NvbnN0IHJhbmQ9c2VlZC8yKiozMjtyZXR1cm4gTWF0aC5mbG9vcihyYW5kKihtYXgtbWluKSkrbWluO307cmV0dXJue2VuY3J5cHQoa2V5LHBsYWludGV4dCxhbHBoYWJldD10aGlzLmdlbmVyYXRlX2FscGhhYmV0KHRydWUpKXtjb25zdCBpbnB1dHM9Zm9ybWF0X2lucHV0cyhrZXkscGxhaW50ZXh0LGFscGhhYmV0KTtjb25zdCBjaXBoZXJ0ZXh0PWFscGhhX3RyYW5zcG9zZShpbnB1dHNbImtleSJdLGNvbHVtbl90cmFuc3Bvc2UoaW5wdXRzWyJrZXkiXSxmcmFjdGlvbmF0ZShpbnB1dHNbInRleHQiXSxpbnB1dHNbImFscGhhYmV0Il0saW5wdXRzWyJwb2x5Yml1c19zcXVhcmUiXSkpKTtyZXR1cm57Y2lwaGVydGV4dDpjaXBoZXJ0ZXh0LGFscGhhYmV0OmlucHV0c1siYWxwaGFiZXQiXX07fSxkZWNyeXB0KGtleSxjaXBoZXJ0ZXh0LGFscGhhYmV0KXtjb25zdCBpbnB1dHM9Zm9ybWF0X2lucHV0cyhrZXksY2lwaGVydGV4dCxhbHBoYWJldCk7Y29uc3QgcGxhaW50ZXh0PXJldmVyc2VfZnJhY3Rpb25hdGUocmV2ZXJzZV9jb2x1bW5fdHJhbnNwb3NlKGlucHV0c1sia2V5Il0scmV2ZXJzZV9hbHBoYV90cmFuc3Bvc2UoaW5wdXRzWyJrZXkiXSxpbnB1dHNbInRleHQiXSkpLGlucHV0c1siYWxwaGFiZXQiXSxpbnB1dHNbInBvbHliaXVzX3NxdWFyZSJdKTtyZXR1cm4gcGxhaW50ZXh0O30sZ2VuZXJhdGVfYWxwaGFiZXQoZXh0ZW5kZWQ9ZmFsc2Upe2xldCBhbHBoYWJldD1ERUZBVUxUXzI1X0FMUEhBQkVUO2lmKGV4dGVuZGVkKWFscGhhYmV0PURFRkFVTFRfMzZfQUxQSEFCRVQ7Y29uc3QgbGVuZ3RoPWFscGhhYmV0Lmxlbmd0aDtsZXQgcmV0dmFsPSIiO2ZvcihsZXQgaT0wO2k8bGVuZ3RoO2krKyl7Y29uc3Qgaj1ybmcoMCxhbHBoYWJldC5sZW5ndGgpO3JldHZhbCs9YWxwaGFiZXRbal07YWxwaGFiZXQ9YWxwaGFiZXQuc2xpY2UoMCxqKSthbHBoYWJldC5zbGljZShqKzEpO31yZXR1cm4gcmV0dmFsO319fSkoKTs="></script>